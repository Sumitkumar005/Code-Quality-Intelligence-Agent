[tool:pytest]
minversion = 7.0
addopts = -ra -q --strict-markers --strict-config
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    ai: marks tests that require AI services
    git: marks tests that require git operations
    database: marks tests that require database
    external: marks tests that require external services
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = logs/pytest.log
log_file_level = INFO
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

[tool:pytest:coverage]
run = source = app
    omit =
        */tests/*
        */test_*
        app/main.py
        app/cli.py
        app/db/migrations/*
        app/db/migrations/versions/*
    exclude_lines =
        pragma: no cover
        def __repr__
        if self.debug:
        if settings.DEBUG
        raise AssertionError
        raise NotImplementedError
        if 0:
        if __name__ == .__main__.:
        class .*\bProtocol\):
        @(abc\.)?abstractmethod

[tool:pytest:coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    def __str__
    def __eq__
    def __hash__
    def __init__
    def __del__
    def __enter__
    def __exit__
    def __call__
    def __getattr__
    def __setattr__
    def __delattr__
    def __len__
    def __getitem__
    def __setitem__
    def __delitem__
    def __iter__
    def __next__
    def __reversed__
    def __contains__
    def __add__
    def __sub__
    def __mul__
    def __floordiv__
    def __truediv__
    def __mod__
    def __pow__
    def __lshift__
    def __rshift__
    def __and__
    def __xor__
    def __or__
    def __neg__
    def __pos__
    def __abs__
    def __invert__
    def __complex__
    def __int__
    def __float__
    def __round__
    def __ceil__
    def __floor__
    def __trunc__
    def __iadd__
    def __isub__
    def __imul__
    def __ifloordiv__
    def __itruediv__
    def __imod__
    def __ipow__
    def __ilshift__
    def __irshift__
    def __iand__
    def __ixor__
    def __ior__
    def __ineg__
    def __ipos__
    def __iabs__
    def __iinvert__
    def __iconcat__
    def __irepeat__
    def __igetitem__
    def __isetitem__
    def __idelitem__
    def __ireversed__
    def __icontains__
    def __iadd__
    def __isub__
    def __imul__
    def __ifloordiv__
    def __itruediv__
    def __imod__
    def __ipow__
    def __ilshift__
    def __irshift__
    def __iand__
    def __ixor__
    def __ior__
    def __ineg__
    def __ipos__
    def __iabs__
    def __iinvert__
    def __iconcat__
    def __irepeat__
    def __igetitem__
    def __isetitem__
    def __idelitem__
    def __ireversed__
    def __icontains__
