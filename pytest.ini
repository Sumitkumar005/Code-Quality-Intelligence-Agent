[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests
    auth: marks tests related to authentication
    api: marks tests related to API endpoints
    database: marks tests that require database
    external: marks tests that require external services
    mock: marks tests that use mocking

# Test configuration
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=backend
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=5
    --disable-warnings

# Coverage configuration
[coverage:run]
source = backend/
omit =
    backend/tests/*
    backend/app/db/migrations/*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

# Pytest-asyncio configuration
[tool:pytest-asyncio]
asyncio_mode = auto

# Pytest-mock configuration
[tool:pytest-mock]
mock_use_standalone_module = true

# Pytest-xdist configuration (for parallel test execution)
[tool:pytest-xdist]
addopts = --dist=loadfile
